<Project>
    <Import Project="..\Directory.Build.props"/>

    <!--Packages details-->
    <PropertyGroup>
        <NeutralLanguage>en-US</NeutralLanguage>
        <PackageLicense>https://github.com/dadhi/ImTools/blob/master/LICENSE.txt</PackageLicense>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
        <PackageProjectUrl>https://github.com/dadhi/ImTools</PackageProjectUrl>
        <RepositoryUrl>https://github.com/dadhi/ImTools.git</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    </PropertyGroup>

    <!--Signing all packages, oh boy-->
    <PropertyGroup Condition=" '$(Sign)' != 'false' ">
        <SignAssembly>true</SignAssembly>
        <AssemblyOriginatorKeyFile>..\..\ImTools.snk</AssemblyOriginatorKeyFile>
        <DelaySign>false</DelaySign>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
        <GenerateDocumentationFile>true</GenerateDocumentationFile>

        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <PackageOutputPath>..\..\.dist\packages</PackageOutputPath>

        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>

        <PackageReadmeFile>README.md</PackageReadmeFile>
        <!-- <PackageIcon>LOGO.png</PackageIcon> -->

    </PropertyGroup>

    <ItemGroup>
        <None Include="..\..\LICENSE.txt" Pack="true" PackagePath="" Visible="false" />
        <None Include="..\..\ImTools.snk" Pack="true" PackagePath="" Visible="false" />
        <None Include="..\..\README.md" Pack="true" PackagePath="" Visible="false" />
        <!-- <None Include="..\..\LOGO.png" Pack="true" PackagePath="" Visible="false" /> -->
    </ItemGroup>

</Project>
