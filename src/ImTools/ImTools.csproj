<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFrameworks>net45;netstandard2.0</TargetFrameworks>

        <Product>ImTools</Product>
        <VersionPrefix>3.1.0</VersionPrefix>
        <VersionSuffix></VersionSuffix>

        <AssemblyName>$(Product)</AssemblyName>
        <AssemblyTitle>$(AssemblyName) $(TargetFramework)</AssemblyTitle>

        <PackageId>$(Product).dll</PackageId>
        <Title>$(Product).dll</Title>
        <Description>
<![CDATA[
        Immutable persistent collections, algebraic sum-type aka descriminated union, Ref type and supportive extensions for performant functional programming in C#.
        Split from the DryIoc: https://github.com/dadhi/DryIoc
]]>
        </Description>
        <PackageTags>FP Performance Simple Functional Immutable Persistent Map Avl 2-3Tree Self Balanced Tree Dictionary Thread-safe Functional Atomic Ref Algebraic Discriminated Union SumType</PackageTags>
        <PackageReleaseNotes>
<![CDATA[
## v3.1.0 Minor feature and bug-fix release

- fixed: #44 the Im(Hash)Map.Entry methods should return the entry type but now return the map type
- fixed: Excessive memory consumption and potential issue in ArrayTools.Match for 2 items
- added: More efficient Im(Hash)Map ToArray() method
- added: ImHashMap ForEach with the struct IHandler
- added: ArrayTools.AppendNonEmpty and PrependToNonEmpty methods


## v3.0.0 Major feature release

- Minimizing the target frameworks to the net45 and netstandard2.0
- Added fast and more memory efficient ImMap and ImHashMap based on 2-3 tree (#32, #35)
- Extended the map API with AddOrGetEntry, Count, ToArray, and ToDictionary methods, and more

]]>
    </PackageReleaseNotes>
    </PropertyGroup>

</Project>
